//
// This file has been autogenerated by goffi-gen. DO NOT EDIT IT MANUALLY!
//

export interface GetProjectsIn {
}

export interface GetProjectsOut {
    Items: Project[];
}

export interface Project {
    fullName:            string;
    group:               Group;
    id:                  string;
    name:                string;
    repository:          Repository;
    workspaceDirectory?: string;
}

export interface Group {
    id:   string;
    name: string;
}

export interface Repository {
    type: Type;
    url:  string;
}

export enum Type {
    Bitbucket = "bitbucket",
    Custom = "custom",
    Github = "github",
    Gitlab = "gitlab",
}

export interface InstallProjectIn {
    projectId: string;
}

export interface InstallProjectOut {
    workspaceDirectory: string;
}

export interface RemoveProjectIn {
    projectId: string;
}

export interface RemoveProjectOut {
}

import { callNativeFunction } from "../lib";

function getProjects(args: GetProjectsIn): Promise<GetProjectsOut> {
  return callNativeFunction<GetProjectsOut>("projects", "getProjects", args);
}

function installProject(args: InstallProjectIn): Promise<InstallProjectOut> {
  return callNativeFunction<InstallProjectOut>("projects", "installProject", args);
}

function removeProject(args: RemoveProjectIn): Promise<RemoveProjectOut> {
  return callNativeFunction<RemoveProjectOut>("projects", "removeProject", args);
}

export const projects = {
  getProjects,
  installProject,
  removeProject,
}