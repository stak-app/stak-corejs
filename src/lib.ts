// 
// This file has been autogenerated by goffi-gen. DO NOT EDIT IT MANUALLY!`,
//

import { Error } from "./error";

const ffi = require("ffi-napi");
const os = require("os");

// determine platform (darwin, linux)
const platform = os.platform();

// determine CPU architecture (arm64, amd64)
var arch = os.arch();
if (arch == "x64") {
    arch = "amd64";
}

const libPath = `${__dirname}/../prebuilds/libstak-core-${platform}-${arch}`;

const nativeLib = ffi.Library(libPath, {
  Call: ["string", ["string", "string", "string"]],
});

export function callNativeFunction<ResultType>(pkg: string, method: string, args: any): Promise<ResultType> {
    return new Promise((resolve, reject) => {
        const argsJson = JSON.stringify(args);   
        const resultJson = JSON.parse(nativeLib.Call(pkg, method, argsJson));
    
        if ('error' in resultJson) {
            reject(resultJson as Error)
        }
        resolve(resultJson as ResultType);
    });
}
